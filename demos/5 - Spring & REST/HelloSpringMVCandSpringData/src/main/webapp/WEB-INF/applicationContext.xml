<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- The Application COntext sets up our IoC container -->
	<!-- IoC means inversion of control Spring creates the dependencies that 
		other objects rely on, rather than the objects instantiating the dependencies 
		themselvs -->

	<!-- Telling spring to scan our application for @Repository and @Transactional -->
	<tx:annotation-driven />

	<!-- We want out Spring to read through our application and configure @Controller -->
	<mvc:annotation-driven />

	<context:component-scan
		base-package="com.revature.repository" />
	<context:component-scan
		base-package="com.revature.service" />
	<context:component-scan
		base-package="com.revature.controller" />


	<!-- Datasource bean (JDBC creds) -->
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="org.postgresql.Driver" />
		<!-- customize this -->
		<property name="url"
			value="jdbc:postgresql://localhost:5432/postgres" />
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
	</bean>



	<!-- SessionFactory bean works with hibernate -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<!-- We are wiring our dataSource bean into our sessionFactory bean -->
		<property name="dataSource" ref="dataSource" />


		<!-- Annotation Mapping -->
		<property name="packagesToScan" value="com.revature.model" />
		<property name="hibernateProperties">

			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>


	<!-- transaction manager bean -->
	<!-- This will make all sessions capable of a transaction -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>
</beans>